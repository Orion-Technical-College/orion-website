@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_MainLayout.cshtml";

    CMS.Entities.Redirections objRedirections = ViewBag.objRedirections;
    List<CMS.Entities.Redirections> lstRedirections = ViewBag.lstRedirections;

    //string RoleName = Session["rollname"].ToString();
}

<script type="text/javascript">

    $(document).ready(function () {
        $('#wRedirections').addClass('active');

        $('.alert-danger').append('<i class="fa fa-ban"></i><button class="close" aria-hidden="true" data-dismiss="alert" type="button">×</button>');
        $('.alert-success').append('<i class="fa fa-check"></i><button class="close" aria-hidden="true" data-dismiss="alert" type="button">×</button>');
        //$('#Masters').addClass('active');
        $('#wRedirections').addClass('active');

        //$("#FromDate").datepicker({ changeMonth: true, changeYear: true, yearRange: "-10:+10", altFormat: 'mm/dd/yy' });

        //$("#ToDate").datepicker({ changeMonth: true, changeYear: true, yearRange: "-10:+10", altFormat: 'mm/dd/yy' });

        //Money Euro
        $("[data-mask]").inputmask();

        PagerClickBind();

        //$(".date").datepicker({ changeMonth: true, changeYear: true, yearRange: "-90:+0", altFormat: 'dd/mm/yy' });

    });

    function Onload(Pageno) {
        var pageno = Common.Pageno(Pageno);
        var sortcolumn = $('#hdnsortcolumn').val();
        var sortorder = $('#hdnsortorder').val();
        var items = $('#txtitems').val();
        var Search = $.trim($('#txtsearch').val());




        $.ajax({
            url: '@Url.Action("RedirectionsList", "Redirections")',
            type: 'GET',
            cache: false,
            data: { Search: Search, PageNo: pageno, SortColumn: sortcolumn, SortOrder: sortorder, Items: items,   },
            success: function (result) {
                $('#divRedirections').html(result);
                PagerClickBind();
            }
        });
    }
    function sortresult(sortcolumn) {
        $('#hdnsortorder').val(($('#hdnsortorder').val() == 'ASC' ? 'DESC' : 'ASC'));
        $('#hdnsortcolumn').val(sortcolumn);
        Onload(1);
    }
    function PagerClickBind() {
        $(".pagination a").bind("click", function () {
            Onload($(this).text());
        });
    }

    function ClearSearch() {
        $('#txtsearch').val('');
        $('#hdnPageNo').val(1);
        $('#StartDate').val('');
        $('#EndDate').val('');
        Onload(1);
    }

    function Add() {
        $('#AddRedirections').modal('show');
        $('#lbltitle').html('Add Redirections');
    }

    function Validate() {

        //Account Information
        if ($.trim($('#FromUrl').val()) == '') { $('#FromUrl').focus().addClass("validate"); return false; } else { $('#FromUrl').focus().removeClass("validate"); }
        if ($.trim($('#ToUrl').val()) == '') { $('#ToUrl').focus().addClass("validate"); return false; } else { $('#ToUrl').focus().removeClass("validate"); }

        return true;
    }

    function ResetValidateClass() {
        $('#Redirections').removeClass("validate");
    }

</script>

<input id="hdnPageNo" type="hidden" value="1" />
<input id="hdnsortcolumn" type="hidden" value="RedirectionId" />
<input id="hdnsortorder" type="hidden" value="ASC" />
<input type="hidden" id="hdnimgvalidate" value="0" />


<div class="card">
    <div class="card-header py-3 mb-3">
        <div class="row  gx-2">
            <div class="col-lg-3 col-md-6 col-8">
                <div class="input-box">
                    <label class="form-label">Search by Source url / target url <span class="text-danger">*</span></label>
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" name="txtsearch" id="txtsearch" placeholder="Name">
                        @*<span class="input-group-text pointer" style="cursor:pointer" onclick="Onload(1);" id="txtsearch" name="txtsearch"><i class="bi bi-search"></i></span>*@
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="btn-align">
                    <button type="button" class="btn btn-primary px-3" onclick="Onload(1);">Search</button>
                    <button type="button" class="btn btn-danger px-3" onclick="ClearSearch();">Clear</button>
                </div>
            </div>
            <div class="col-lg-2 col-4 text-end ms-auto">
                <div class="btn-align">
                    <button type="button" class="btn btn-primary" onclick="Add();">Add Redirections</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="AddRedirections" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            @using (Html.BeginForm("AddRedirections", "Redirections", FormMethod.Post, new { style = "margin-bottom:0", @id = "FormWebBanners", @name = "FormWebBanners" }))
            {
                <input type="hidden" id="RedirectionId" name="RedirectionId" value="0" />
                <div class="modal-content">

                    <div class="modal-body validation">
                        <div class="modal-header">
                            <h5 class="modal-title"><span id="lbltitle"></span></h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-lg-12 col-md-6">
                                    <div class="input-box">
                                        <label class="form-label">Source Url : <span class="text-danger"><b>Note:</b>(Enter the url with out https/http(Ex:donatenow))</span></label>
                                        <input type="text" class="form-control" id="FromUrl" name="FromUrl" placeholder="Source Url">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-lg-12 col-md-6">
                                    <div class="input-box">
                                        <label class="form-label">Target Url : <span class="text-danger"><b>Note:</b>(Enter the url with out https/http(Ex:donatenow))</span></label>
                                        <input type="text" class="form-control" id="ToUrl" name="ToUrl" placeholder="Target Url">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-lg-12 col-md-6">
                                    <div class="input-box">
                                        <label class="form-label">Link Target  : <span class="text-danger"><b>Note:</b>(Enter the url with out https/http(Ex:donatenow))</span></label>
                                        <select name="Target" class="form-control" id="Target" onclick="ResetValidateClass();">
                                            <option value="">--Select--</option>
                                            <option value="_blank">Out of the tab</option>
                                            <option value="_parent">With in the tab</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary modal-close-button" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save changes</button>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
    <div id="divRedirections" class="box-body table-responsive">
        @{Html.RenderAction("RedirectionsList", "Redirections");}
    </div>
</div>


<script>
  






    $(document).ready(function () {
        $("#BannerUrl").change(function () {
            validateBannerUrl();
        });

        function validateBannerUrl() {
            $("#FormWebBanners").validate().resetForm();
            $("#FormWebBanners").validate().element("#BannerUrl");
        }

        $.validator.addMethod("validImageExtension", function (value, element) {
            if (element.files && element.files.length > 0) {
                var allowedExtensions = ["jpg", "png", "gif", "jpeg"];
                var fileName = element.files[0].name;
                var extension = fileName.split('.').pop().toLowerCase();
                return $.inArray(extension, allowedExtensions) !== -1;
            }
            return true;
        }, "Only allowed extensions are: jpg, png, gif, jpeg");


        var validateForm = $("#FormWebBanners").validate({
            rules: {
                FromUrl: "required",
                ToUrl: "required",
                Target: "required",

            },
            messages: {
                FromUrl: "Please Provide FromUrl",
                ToUrl: "Please Provide ToUrl",
                Target: "Please Select",
                BannerTitle: "Please Enter The Banner Title",
                BannerUrl: {
                    required: "Please select an image file",
                    validImageExtension: "Invalid file type. Only jpg, png, gif, jpeg files are allowed."
                }
            },
            submitHandler: function (form) {
                var response = grecaptcha.getResponse();
                if ('Yes' == 'Yes') {
                    if (response.length === 0) {
                        alert('Please confirm that you are not a robot.');
                    }
                    else {
                        form.submit();
                    }
                }
                else {
                    form.submit();
                }
            },

            errorElement: "div",
            errorPlacement: function (error, element) {
                // Add the `invalid-feedback` class to the error element
                error.addClass("invalid-feedback");

                if (element.prop("type") === "checkbox") {
                    error.insertAfter(element.parent("label"));
                } else {
                    error.insertAfter(element);
                }

                // Move the error element after the fieldset element
                if (element.closest(".input-box").length) {
                    element.closest(".input-box").after(error);
                }
            },
            highlight: function (element, errorClass, validClass) {
                // Highlight the input, textarea, or select element with the `is-invalid` class
                var $element = $(element);
                if ($element.is('input, textarea, select')) {
                    $element.addClass("is-invalid").removeClass("is-valid");
                }


            },
            unhighlight: function (element, errorClass, validClass) {
                // Unhighlight the input, textarea, or select element by adding the `is-valid` class
                var $element = $(element);
                if ($element.is('input, textarea, select')) {
                    $element.addClass("is-valid").removeClass("is-invalid");
                }

            },


        });

        $('.modal').on('hidden.bs.modal', function () {
            // Reset form fields
            $('#FormWebBanners')[0].reset();

            // Reset form validations
            validateForm.resetForm();

            // Clear validation classes
            $('.modal').find('.error').removeClass('is-valid is-invalid');
            $('.modal').find('.form-control').removeClass('is-valid is-invalid');
        });
    });












</script>
@using System.Configuration
@model CMS.Entities.ForgotPasswordModel
@{
    int status = 0;

    CMS.BLL.AppInfo _AppInfo = new CMS.BLL.AppInfo();
    CMS.Entities.AppInfo objAppInfo = new CMS.Entities.AppInfo();

    objAppInfo = _AppInfo.GetAppInfoDetails(ref status);

    ViewBag.Title = objAppInfo.SiteName + " - Control Panel";
    Layout = null;
}

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" class="bg-black">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    @{var baseurl = objAppInfo.BaseUrl;}
    <base href="@(baseurl)" />
    <title>@objAppInfo.SiteName - Control Panel</title>


    <link rel="icon" href="Content/Admin/images/favicon-32x32.png" type="image/png" />




    <script src="Content/Admin/js/jquery.min.js"></script>
    <script src="Scripts/Admin/jquery.validate.js"></script>


    <script src="Content/Admin/js/jquery-validate.min.js"></script>
    <!-- Bootstrap CSS -->
    <link href="Content/Admin/css/bootstrap.min.css" rel="stylesheet" />
    <link href="Content/Admin/css/bootstrap-extended.css" rel="stylesheet" />
    <link href="Content/Admin/plugins/notifications/css/lobibox.css" rel="stylesheet" />
    <link href="Content/Admin/css/style.css" rel="stylesheet" />
    <link href="Content/Admin/css/icons.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" />

    <!-- loader-->
    @*<link href="Content/Admin/css/pace.min.css" rel="stylesheet" />*@
    @*<script src="Content/Admin/js/jquery.min.js"></script>
        <script src="Content/Admin/js/pace.min.js"></script>*@


</head>


<body>

    <!--start wrapper-->
    <div class="wrapper">

        <!--start content-->
        <main class="authentication-content">
            <div class="container-fluid">
                <div class="authentication-card">
                    <div class="card shadow rounded-0 overflow-hidden">
                        <div class="row g-0">
                            <div class="col-lg-6 d-flex align-items-center justify-content-center border-end">


                                <img src="Content/Admin/images/error/forgot-password-frent-img.jpg" class="img-fluid" alt="" />
                            </div>
                            <div class="col-lg-6">
                                <div class="card-body p-4 p-sm-5">


                                    @*@if (TempData["message"] != null)
        {
            <div id="divmessage" class="sepH_b">@Html.Raw(TempData["message"].ToString())</div>}
        @if (ViewBag.message != null)
        {<div id="divmessage" class="sepH_b">@Html.Raw(ViewBag.message.ToString())</div>}*@


                                    @if (TempData["messageType"] != null && TempData["message"] != null)
                                    {
                                        <script>
            $(document).ready(function () {
                showLobiboxNotification('@TempData["messageType"]', '@TempData["message"]');
            });
                                        </script>
                                    }

                                    <script>
                                        function showLobiboxNotification(messageType, message) {
                                            var iconClass;
                                            switch (messageType.toLowerCase()) {
                                                case 'success':
                                                    iconClass = 'bx bx-check-circle';
                                                    break;
                                                case 'warning':
                                                    iconClass = 'bx bx-warning-circle';
                                                    break;
                                                case 'error':
                                                    iconClass = 'bx bx-x-circle';
                                                    break;
                                                default:
                                                    iconClass = 'bx bx-info-circle';
                                                    break;
                                            }

                                            Lobibox.notify(messageType, {
                                                pauseDelayOnHover: true,
                                                size: 'mini',
                                                rounded: true,
                                                icon: iconClass,
                                                delayIndicator: false,
                                                continueDelayOnInactiveTab: false,
                                                position: 'top right',
                                                msg: message
                                            });
                                        }
                                    </script>


                                    <h5 class="card-title">Forgot Password?</h5>
                                    <p class="card-text mb-5">Enter your registered email ID to reset the password</p>
                                    @*<form class="form-body">*@


                                    @using (Html.BeginForm())
                                    {
                                        <div class="row g-3">
                                            <div class="col-12">
                                                <label for="inputEmailid" class="form-label">Email id</label>
                                                <input type="text" class="form-control form-control-lg radius-30" name="Email" id="Email" placeholder="Please Enter Email" />

                                            </div>
                                            <div class="col-12">
                                                <div class="d-grid gap-3">
                                                    <button type="submit" class="btn btn-lg btn-primary radius-30">Send</button>
                                                    <a href="@Url.Action("LogOn", "Account")" class="btn btn-lg btn-light radius-30">Back to Login</a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>

        <!--end page main-->

    </div>
    <!--end wrapper-->
    <!--plugins-->


    <script src="Content/Admin/plugins/notifications/js/lobibox.min.js"></script>
    <script src="Content/Admin/plugins/notifications/js/notifications.min.js"></script>
    <script src="Content/Admin/plugins/notifications/js/notification-custom-script.js"></script>

</body>

</html>


<script>

    $(document).ready(function () {



        $("form").validate({
            rules: {


                Email: {
                    required: true,
                    validate_email: true

                },

              
            },
            messages: {

                Email: {
                    required: "Please enter email address",
                    validate_email: "Please enter valid email address"

                },

               
            },



            errorElement: "div",
            errorPlacement: function (error, element) {
                // Add the `invalid-feedback` class to the error element
                error.addClass("invalid-feedback");

                if (element.prop("type") === "checkbox") {
                    error.insertAfter(element.parent("label"));
                } else {
                    error.insertAfter(element);
                }

                // Move the error element after the fieldset element
                if (element.closest(".input-box").length) {
                    element.closest(".input-box").after(error);
                }
            },
            highlight: function (element, errorClass, validClass) {
                // Highlight the input, textarea, or select element with the `is-invalid` class
                var $element = $(element);
                if ($element.is('input, textarea, select')) {
                    $element.addClass("is-invalid").removeClass("is-valid");
                }


            },
            unhighlight: function (element, errorClass, validClass) {
                // Unhighlight the input, textarea, or select element by adding the `is-valid` class
                var $element = $(element);
                if ($element.is('input, textarea, select')) {
                    $element.addClass("is-valid").removeClass("is-invalid");
                }

            },


        });
    });

</script>